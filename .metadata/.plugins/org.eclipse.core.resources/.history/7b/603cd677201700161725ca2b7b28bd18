import org.apache.spark.SparkContext
import org.apache.spark.SparkContext._
import org.apache.spark.SparkConf


object DDL {
	def main(args: Array[String]) {
		

		// Create database
		val conf = new SparkConf().setAppName("Data Loader").setMaster("yarn-cluster")
		val sc = new SparkContext(conf)
		val sqlContext = new org.apache.spark.sql.SQLContext(sc)
		import sqlContext.implicits._
		
		sqlContext.sql("show databases").collect().foreach(println);
		sqlContext.sql("CREATE DATABASE mydb")
		sqlContext.sql("USE mydb")
		sqlContext.sql("show tables").collect().foreach(println);

		// Create data frame of conference names and journal names
		sqlContext.sql("CREATE TABLE Papers (PaperID String,OriginalPaperTitle String,NormalizedPaperTitle String,PaperPublishYear String,PaperPublishDate String,PaperDocumentObjectIdentifier String,OriginalVenueName String,NormalizedVenueName String,JournalIDMappedToVenueName String,ConferenceSeriesIDMappedToVenueName String,PaperRank String) ROW FORMAT delimited FIELDS TERMINATED BY '\t' STORED AS textfile")
		sqlContext.sql("LOAD DATA INPATH '/data/Papers.txt' OVERWRITE INTO TABLE Papers")
		var df = sqlContext.sql("select * from Papers where NormalizedVenueName='nature'")
		df.show()
		df = sqlContext.sql("select NormalizedVenueName from Papers")
		df.distinct().count() // res8: Long = 24004
		val res = df.distinct()
		res.rdd.map(x=>x.mkString(",")).foreach(println)
		res.rdd.saveAsTextFile("hdfs://atlas8:9000/data/output")

		// Load all tables into database
		sqlContext.sql("CREATE TABLE Journals (JournalID String,JournalName String) ROW FORMAT delimited FIELDS TERMINATED BY '\t' STORED AS textfile")
		sqlContext.sql("CREATE TABLE ConferenceSeries (ConferenceSeriesID String,ShortName String,FullName String) ROW FORMAT delimited FIELDS TERMINATED BY '\t' STORED AS textfile")
		sqlContext.sql("CREATE TABLE ConferenceInstances (ConferenceSeriesID String,ConferenceInstanceID String,ShortName String,FullName String,Location String,OfficialConferenceURL String,ConferenceStartDate String,ConferenceEndDate String,ConferenceAbstractRegistrationDate String,ConferenceSubmissionDeadlineDate String,ConferenceNotificationDueDate String,ConferenceFinalVersionDueDate String) ROW FORMAT delimited FIELDS TERMINATED BY '\t' STORED AS textfile")
 
		sqlContext.sql("LOAD DATA INPATH '/data/Journals.txt' OVERWRITE INTO TABLE Journals")
		sqlContext.sql("LOAD DATA INPATH '/data/Conferences.txt' OVERWRITE INTO TABLE ConferenceSeries")
		sqlContext.sql("LOAD DATA INPATH '/data/ConferenceInstances.txt' OVERWRITE INTO TABLE ConferenceInstances")

		sqlContext.sql("select JournalName from Journals").distinct().rdd.saveAsTextFile("hdfs://atlas8:9000/data/outputjnj")
		sqlContext.sql("select FullName from ConferenceSeries").distinct().rdd.saveAsTextFile("hdfs://atlas8:9000/data/outputfncs")
		sqlContext.sql("select ShortName from ConferenceInstances").distinct().rdd.saveAsTextFile("hdfs://atlas8:9000/data/outputsnci")
		sqlContext.sql("select FullName from ConferenceInstances").distinct().rdd.saveAsTextFile("hdfs://atlas8:9000/data/outputfnci")


		// Search for computer science publications

		sqlContext.sql("select FullName from ConferenceInstances where FullName rlike '^.*Artificial.*Intelligence.*$' ").count()
		sqlContext.sql("select FullName from ConferenceInstances where FullName rlike '^.*Artificial.*Intelligence.*$' ").show()
		sqlContext.sql("select FullName from ConferenceInstances where ShortName rlike '^.*AAAI.*$' ").show()

		// sqlContext.sql("USE mydb")



		var res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*AAAI.*$' ")
		var res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Aa]rtificial.*[Ii]ntelligence.*$' ")
		var res3 = res1.unionAll(res2).distinct() // res3.count() : 541

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*AAMAS.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Aa]gents.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) // res3.count() : 702

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*ACMMM.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Mm]ultimedia.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) // res3.count() : 1383

		res1 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*Statistic.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Mm]edicine.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) // res3.count() : 1667

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*AMCIS.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Ii]nfo.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) // res3.count() : 10539

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*AQIS.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Qq]uantum.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) // res3.count() : 10573

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*ASONAM.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Nn]etwork.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) // res3.count() : 13873

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*BioMed.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Bb]io.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) // res3.count() : 15554

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*CASoN.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Cc]omput.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) // res3.count() : 29944

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*CAV.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Vv]erifi.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) // res3.count() : 18499

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*CCC.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Cc]omplex.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) // res3.count() : 18979

		res1 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Cc]luster.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Cc]loud.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) // res3.count() : 19877

		res1 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Cc]ommunicat.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Ss]ecur.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) // res3.count() : 21738

		res1 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Kk]no.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*ACM.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) // res3.count() : 23049

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*COGSCI.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[cC]ognit.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) // res3.count() : 23672

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*CONCUR.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[cC]oncur.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) // res3.count() : 23725

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*CoopIS.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[cC]oop.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*COSIT.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Ss]pat.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*CP.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Pp]rogram.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*Crypto.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[cC]ryptology.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*CSF.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Ss]ecurity.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*CVPR.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[pP]attern.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*DASFAA.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[dD]ata.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*ECCV.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[vV]ision.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*ECIS.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*ECML.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*ECML.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Mm]achine.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*EDBT.*$' ")
		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*FOCS.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*FUZZ.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Ff]uzzy.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*GECCO.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Gg]ene.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Ee]volution.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Ff]ormal.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*HRI.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Rr]obo.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*Humanoids.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Hh]uman.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*Humanoids.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Hh]uman.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*Hypertext.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Hh]yper.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*ICALP.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Aa]utomat.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*ICAPS.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Pp]lan.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*ICCV.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*IEEE.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*ICDE.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*ICDM.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*ICFP.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Ff]unction.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*ICIEA.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Ee]lectronic.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*ICIS.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*ICML.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*ICRA.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*ICSR.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*ICSOC.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Ss]ervice.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*CEC.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*CIBCB.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*IJCNN.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*IROS.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*ICSOC.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Nn]eur.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*ISD.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*ISIT.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*KDD.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Kk]no.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*KR.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Rr]eason.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*LICS.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Ll]ogic.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*NIPS.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*PACIS.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*PAKDD.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*Data.*Mining.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*PODS.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*SIG.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*POPL.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Ll]anguage.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*PPSN.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Pp]arallel.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*QCMC.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Mm]easure.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*Qcrypt.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Cc]rypto.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*QIP.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Pp]rocess.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*QIPC.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*RiTA.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*RecSys.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Rr]ecommend.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*MAN.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Ii]nteract.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*S.*P.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Pp]riv.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*SDM.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*SIGIR.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*SIGKDD.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Kk]nowledge.*[Dd]iscovery.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*SIGMOD.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Dd]ata.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*SSTD.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*STACS.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*STOC.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Tt]heory.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*TACAS.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Aa]lgorithm.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*TARK.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Rr]ation.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*TLCA.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Ll]ambda.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*TQC.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*UAI.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*TLCA.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*VLDB.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*WCCI.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Ii]ntelligence.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*WISE.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*[Ww]eb.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*WWW.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*Problem.*Solving.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res1 = sqlContext.sql("select * from ConferenceInstances where ShortName rlike '^.*MFCS.*$' ")
		res2 = sqlContext.sql("select * from ConferenceInstances where FullName rlike '^.*Computer.*Science.*$' ")
		res3 = res3.unionAll(res1.unionAll(res2).distinct()) 

		res3.count()


		
	}
		

   
}



/*

HiveQL

Check Missing Values :

select count(*) from Affiliations;
select year(from_unixtime(unix_timestamp(ConferenceEndDate,'yyyy/mm/dd'), 'yyyy-mm-dd')) from ConferenceInstances;
describe ConferenceInstances;
select ConferenceStartDate,ConferenceEndDate,ConferenceAbstractRegistrationDate, ConferenceSubmissionDeadlineDate, ConferenceNotificationDueDate, ConferenceFinalVersionDueDate from ConferenceInstances where ConferenceStartDate=null or ConferenceEndDate=null or ConferenceAbstractRegistrationDate=null or ConferenceSubmissionDeadlineDate=null or ConferenceNotificationDueDate=null or ConferenceFinalVersionDueDate=null;
select NormalizedPaperTitle,NormalizedVenueName from Papers limit 10;
select * from Papers where NormalizedVenueName='nature';


HDFS Shell Commands :

hadoop fs -ls /data
hadoop fs -copyToLocal /data/output .
cd ~/output; cat * > merged-file

hadoop fs -copyToLocal /data/outputjnj .
hadoop fs -copyToLocal /data/outputsncs .
hadoop fs -copyToLocal /data/outputfncs .
hadoop fs -copyToLocal /data/outputsnci .
hadoop fs -copyToLocal /data/outputfnci .


Spark Shell Commands :
spark-shell -Dspark.executor.memory=50g

Python Shell Commands :

l = open("/home/aneesh/Documents/TopConferenceList.txt").readlines()
l2 = map(str.strip, l[1::2][0:-1])
l2 = map(str.strip, l[0::2][1:-1])

Query Conferences :

['AAAI', 'AAMAS', 'ACMMM', 'AIIM', 'AISTATS', 'AMCIS', 'AQIS', 'ASONAM', 'BioMed', 'CASoN', 'CAV', 'CCC', 'CCGRID', 'CCS', 'CIKM', 'COGSCI', 'CONCUR', 'CoopIS', 'COSIT', 'CP', 'Crypto', 'CSF', 'CVPR', 'DASFAA', 'ECAI', 'ECCV', 'ECIS', 'ECML', 'ECML-PKDD', 'EDBT', 'FME', 'FOCS', 'FUZZ-IEEE', 'GECCO', 'HRI', 'Humanoids', 'Hypertext', 'ICALP', 'ICAPS', 'ICCV', 'ICDE', 'ICDM', 'ICFP', 'ICIEA', 'ICIS', 'ICML', 'ICRA', 'ICSOC', 'ICSR', 'IEEE CEC', 'IEEE CIBCB', 'IJCAI', 'IJCNN', 'IJCNN', 'IROS', 'ISD', 'ISIT', 'JELIA', 'KDD', 'KR', 'LICS', 'LICS', 'MFCS', 'NIPS', 'PACIS', 'PAKDD', 'PODS', 'POPL', 'PPSN', 'QCMC', 'Qcrypt', 'QIP', 'QIPC', 'RecSys', 'RiTA', 'RO-MAN', 'S&P', 'SDM', 'SIGIR', 'SIGKDD', 'SIGMOD', 'SSTD', 'STACS', 'STOC', 'TACAS', 'TARK', 'TLCA', 'TQC', 'UAI', 'VLDB', 'WCCI', 'WISE', 'WWW']

['National Conference of the American Association for Artificial Intelligence', 'International Conference on Autonomous Agents', 'ACM Multimedia', 'Artificial Intelligence in Medicine', 'International Conference on Artificial Intelligence and Statistics', 'Americas Conference on Information Systems', 'Asian Quantum Information Science Conference', 'IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining', 'IASTED International Conference on Biomedical Engineering', 'International Conference on Computational Aspects of Social Networks', 'Computer Aided Verification', 'Computational Complexity Conference', 'IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing', 'ACM Conference on Computer and Communications Security', 'ACM International Conference on Information and Knowledge Management', 'Annual Conference of the Cognitive Science Society', 'International Conference on Concurrency Theory', 'International Conference on Cooperative Information Systems', 'Conference on Spatial Information Theory', 'International Conference on Principles and Practice of Constraint Programming', 'Advances in Cryptology', 'IEEE Computer Security Foundations Symposium', 'IEEE Conference on Computer Vision and Pattern Recognition', 'Database Systems for Advanced Applications', 'European Conference on Artificial Intelligence', 'European Conference on Computer Vision', 'European Conference on Information Systems', 'European Conference on Machine Learning', 'European Conference on Principles and Practice of Knowledge Discovery in Databases', 'Extending Database Technology', 'Formal Methods Europe', 'IEEE Symposium on Foundations of Computer Science', 'IEEE International Conference on Fuzzy Systems', 'Genetic and Evolutionary Computations', 'ACM/IEEE International Conference on Human Robot Interaction', 'IEEE-RAS International Conference on Humanoid Robots (Humanoids)', 'ACM Conference on Hypertext and Hypermedia', 'International Colloquium on Automata Languages and Programming', 'International Conference on Automated Planning and Scheduling', 'IEEE International Conference on Computer Vision', 'International Conference on Data Engineering', 'IEEE International Conference on Data Mining', 'International Conference on Functional Programming', 'IEEE Conference in Industrial Electronics and Applications', 'International Conference on Information Systems', 'International Conference on Machine Learning', 'IEEE International Conference on Robotics & Automation', 'International Conference on Service Oriented Computing', 'International Conference on Social Robotics', 'IEEE Congress on Evolutionary Computation', 'IEEE Symposium on Computational Intelligence in Bioinformatics and Computational Biology', 'International Joint Conference on Artificial Intelligence', 'IEEE International Joint Conference on Neural Networks', 'International Joint Conference on Neural Networks', 'IEEE/RSJ International Conference on Intelligent Robots and Systems', 'International Conference on Information Systems Development', 'IEEE International Symposium on Information Theory', 'Logics in Artificial Intelligence, European Conference', 'Knowledge Discovery & Data Mining', 'International Conference on the Principles of Knowledge Representation and Reasoning', 'IEEE Symposium on Logic in Computer Science', 'Logic in Computer Science', 'International Symposium on Mathematical Foundations of Computer Science', 'Advances in Neural Information Processing Systems', 'Pacific-Asia Conference on Information Systems', 'Pacific-Asia Conference on Knowledge Discovery and Data Mining', 'ACM SIGMOD-SIGACT-SIGART Conference on Principles of Database Systems', 'ACM-SIGACT Symposium on Principles of Programming Languages', 'Parallel Problem Solving from Nature', 'International Conference on Quantum Communication, Measurement and Computing', 'International Conference on Quantum Cryptography', 'Workshop on Quantum Information Processing', 'International Conference on Quantum Information Processing and Communication', 'ACM International Conference on Recommender Systems', 'International conference on Robot Inteligence Technology and applications', 'International Symposium on Robot and Human Interactive Communication', 'IEEE Symposium on Security and Privacy', 'SIAM International Conference on Data Mining', 'ACM International Conference on Research and Development in Information Retrieval', 'ACM International Conference on Knowledge Discovery and Data Mining', 'ACM Special Interest Group on Management of Data Conference', 'International Symposium on Spatial Databases', 'Symposium on Theoretical Aspects of Computer Science', 'ACM Symposium on Theory of Computing', 'Tools and Algorithms for Construction and Analysis of Systems', 'Theoretical Aspects of Rationality and Knowledge', 'International Conference on Typed Lambda Calculus and its Applications', 'Theory of Quantum Computation, Communication and Cryptography', 'Conference in Uncertainty in Artificial Intelligence', 'International Conference on Very Large Databases', 'IEEE World Congress on Computational Intelligence', 'International Conference on Web Information Systems Engineering', 'International World Wide Web Conference']
*/
